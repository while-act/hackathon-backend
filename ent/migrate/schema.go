// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BusinessActivitiesColumns holds the columns for the "business_activities" table.
	BusinessActivitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type", Type: field.TypeString},
		{Name: "sub_type", Type: field.TypeString},
		{Name: "total", Type: field.TypeFloat64},
	}
	// BusinessActivitiesTable holds the schema information for the "business_activities" table.
	BusinessActivitiesTable = &schema.Table{
		Name:       "business_activities",
		Columns:    BusinessActivitiesColumns,
		PrimaryKey: []*schema.Column{BusinessActivitiesColumns[0]},
	}
	// CompaniesColumns holds the columns for the "companies" table.
	CompaniesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "inn", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Nullable: true, Size: 150},
		{Name: "website", Type: field.TypeString, Nullable: true},
	}
	// CompaniesTable holds the schema information for the "companies" table.
	CompaniesTable = &schema.Table{
		Name:       "companies",
		Columns:    CompaniesColumns,
		PrimaryKey: []*schema.Column{CompaniesColumns[0]},
	}
	// DistrictsColumns holds the columns for the "districts" table.
	DistrictsColumns = []*schema.Column{
		{Name: "title", Type: field.TypeString, Unique: true},
		{Name: "avg_cadastral_val", Type: field.TypeFloat64},
	}
	// DistrictsTable holds the schema information for the "districts" table.
	DistrictsTable = &schema.Table{
		Name:       "districts",
		Columns:    DistrictsColumns,
		PrimaryKey: []*schema.Column{DistrictsColumns[0]},
	}
	// HistoriesColumns holds the columns for the "histories" table.
	HistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Size: 200},
		{Name: "organizational_legal", Type: field.TypeString},
		{Name: "full_time_employees", Type: field.TypeInt},
		{Name: "avg_salary", Type: field.TypeFloat64},
		{Name: "land_area", Type: field.TypeFloat64},
		{Name: "is_buy", Type: field.TypeBool},
		{Name: "construction_facilities_area", Type: field.TypeFloat64},
		{Name: "building_type", Type: field.TypeJSON},
		{Name: "equipment", Type: field.TypeJSON},
		{Name: "accounting_support", Type: field.TypeBool},
		{Name: "operation_type", Type: field.TypeString, Nullable: true},
		{Name: "patent_calc", Type: field.TypeBool},
		{Name: "other", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "business_activity_id", Type: field.TypeInt, Nullable: true},
		{Name: "district_title", Type: field.TypeString},
		{Name: "industry_branch", Type: field.TypeString},
		{Name: "taxation_system_operations", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt},
	}
	// HistoriesTable holds the schema information for the "histories" table.
	HistoriesTable = &schema.Table{
		Name:       "histories",
		Columns:    HistoriesColumns,
		PrimaryKey: []*schema.Column{HistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "histories_business_activities_histories",
				Columns:    []*schema.Column{HistoriesColumns[14]},
				RefColumns: []*schema.Column{BusinessActivitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "histories_districts_histories",
				Columns:    []*schema.Column{HistoriesColumns[15]},
				RefColumns: []*schema.Column{DistrictsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "histories_industries_histories",
				Columns:    []*schema.Column{HistoriesColumns[16]},
				RefColumns: []*schema.Column{IndustriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "histories_taxation_systems_histories",
				Columns:    []*schema.Column{HistoriesColumns[17]},
				RefColumns: []*schema.Column{TaxationSystemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "histories_users_histories",
				Columns:    []*schema.Column{HistoriesColumns[18]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// IndustriesColumns holds the columns for the "industries" table.
	IndustriesColumns = []*schema.Column{
		{Name: "branch", Type: field.TypeString, Unique: true},
		{Name: "avg_workers_num", Type: field.TypeFloat64},
		{Name: "avg_workers_num_cad", Type: field.TypeFloat64},
		{Name: "avg_salary", Type: field.TypeFloat64},
		{Name: "avg_salary_cad", Type: field.TypeFloat64},
	}
	// IndustriesTable holds the schema information for the "industries" table.
	IndustriesTable = &schema.Table{
		Name:       "industries",
		Columns:    IndustriesColumns,
		PrimaryKey: []*schema.Column{IndustriesColumns[0]},
	}
	// TaxationSystemsColumns holds the columns for the "taxation_systems" table.
	TaxationSystemsColumns = []*schema.Column{
		{Name: "operations", Type: field.TypeInt, Increment: true},
		{Name: "usn6", Type: field.TypeFloat64},
		{Name: "usn15", Type: field.TypeFloat64},
		{Name: "osn", Type: field.TypeFloat64},
	}
	// TaxationSystemsTable holds the schema information for the "taxation_systems" table.
	TaxationSystemsTable = &schema.Table{
		Name:       "taxation_systems",
		Columns:    TaxationSystemsColumns,
		PrimaryKey: []*schema.Column{TaxationSystemsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "role", Type: field.TypeString, Default: "USER"},
		{Name: "name", Type: field.TypeString, Unique: true, Default: schema.Expr("'user' || setval(pg_get_serial_sequence('users','id'),nextval(pg_get_serial_sequence('users','id'))-1)")},
		{Name: "password_hash", Type: field.TypeBytes},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "first_name", Type: field.TypeString, Size: 30},
		{Name: "last_name", Type: field.TypeString, Size: 30},
		{Name: "father_name", Type: field.TypeString, Nullable: true, Size: 30},
		{Name: "position", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "country", Type: field.TypeString, Nullable: true},
		{Name: "city", Type: field.TypeString, Nullable: true},
		{Name: "biography", Type: field.TypeString, Nullable: true, Size: 1024},
		{Name: "sessions", Type: field.TypeJSON, Nullable: true},
		{Name: "company_id", Type: field.TypeInt, Unique: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_companies_users",
				Columns:    []*schema.Column{UsersColumns[15]},
				RefColumns: []*schema.Column{CompaniesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BusinessActivitiesTable,
		CompaniesTable,
		DistrictsTable,
		HistoriesTable,
		IndustriesTable,
		TaxationSystemsTable,
		UsersTable,
	}
)

func init() {
	HistoriesTable.ForeignKeys[0].RefTable = BusinessActivitiesTable
	HistoriesTable.ForeignKeys[1].RefTable = DistrictsTable
	HistoriesTable.ForeignKeys[2].RefTable = IndustriesTable
	HistoriesTable.ForeignKeys[3].RefTable = TaxationSystemsTable
	HistoriesTable.ForeignKeys[4].RefTable = UsersTable
	UsersTable.ForeignKeys[0].RefTable = CompaniesTable
}
